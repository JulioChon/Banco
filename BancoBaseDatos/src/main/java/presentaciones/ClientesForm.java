/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentaciones;

import dominio.Cliente;
import dominio.Direccion;
import excepciones.PersistenciaException;
import implementaciones.ClientesDAO;
import interfaces.IClientesDAO;
import interfaces.ICuentasDAO;
import interfaces.IDepositosDAO;
import interfaces.IDireccionesDAO;
import interfaces.IMoviminetosDAO;
import interfaces.IRetirosSinCuentaDAO;
import java.awt.Color;
import java.sql.Date;
import java.time.LocalDate;
import validaciones.Validadores;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author julio
 */
public class ClientesForm extends javax.swing.JFrame {

    private static final Logger LOG = Logger.getLogger(ClientesDAO.class.getName());
    private final IClientesDAO clientesDAO;
    private final IDireccionesDAO direccionesDAO;
    private final ICuentasDAO cuentasDAO;
    private final IRetirosSinCuentaDAO retirosDAO;
    private final Validadores validadores = new Validadores();
    private final IDepositosDAO depositosDAO;
    private final IMoviminetosDAO movimientosDAO;
    private final String correoCliente;
    private Cliente cliente;
    private Integer id;

    /**
     * Creates new form ClientesForm
     */
    public ClientesForm(IClientesDAO clientesDAO, IDireccionesDAO direccionesDAO, ICuentasDAO cuentasDAO, IRetirosSinCuentaDAO retirosDAO, IDepositosDAO depositosDAO, IMoviminetosDAO movimientosDAO, String correoCliente) {
        this.clientesDAO = clientesDAO;
        this.direccionesDAO = direccionesDAO;
        this.cuentasDAO = cuentasDAO;
        this.retirosDAO = retirosDAO;
        this.depositosDAO = depositosDAO;
        this.movimientosDAO = movimientosDAO;
        this.correoCliente = correoCliente;
        initComponents();
        this.setTitle("Registrar");
        this.cargar();
        LocalDate fechaActual = LocalDate.now();
        LocalDate minFecha = LocalDate.of(1920, 01, 01);
        clpFechaNacimiento.getSettings().setDateRangeLimits(minFecha, fechaActual);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtCorreoElectonico = new javax.swing.JTextField();
        txtApellidoPaterno = new javax.swing.JTextField();
        txtContraseña = new javax.swing.JPasswordField();
        txtApellidoMaterno = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtCalle = new javax.swing.JTextField();
        clpFechaNacimiento = new com.github.lgooddatepicker.components.CalendarPanel();
        txtColonia = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtNumeroCasa = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnAceptar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(192, 212, 193));

        jLabel4.setBackground(new java.awt.Color(236, 196, 100));
        jLabel4.setFont(new java.awt.Font("Segoe UI Semibold", 1, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Información personal");
        jLabel4.setOpaque(true);

        txtCorreoElectonico.setBackground(new java.awt.Color(192, 212, 193));
        txtCorreoElectonico.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtCorreoElectonico.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtApellidoPaterno.setBackground(new java.awt.Color(192, 212, 193));
        txtApellidoPaterno.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtApellidoPaterno.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtContraseña.setBackground(new java.awt.Color(192, 212, 193));
        txtContraseña.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtContraseña.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtApellidoMaterno.setBackground(new java.awt.Color(192, 212, 193));
        txtApellidoMaterno.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtApellidoMaterno.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel11.setText("Fecha de Nacimiento");
        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(55, 81, 55));

        txtCalle.setBackground(new java.awt.Color(192, 212, 193));
        txtCalle.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtCalle.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        clpFechaNacimiento.setBackground(new java.awt.Color(192, 212, 193));
        clpFechaNacimiento.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        clpFechaNacimiento.setForeground(new java.awt.Color(55, 81, 55));

        txtColonia.setBackground(new java.awt.Color(192, 212, 193));
        txtColonia.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtColonia.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel1.setText("Nombre");
        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(55, 81, 55));

        txtNumeroCasa.setBackground(new java.awt.Color(192, 212, 193));
        txtNumeroCasa.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtNumeroCasa.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel2.setText("Apellido Paterno");
        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(55, 81, 55));

        btnAceptar.setText("Aceptar");
        btnAceptar.setBackground(new java.awt.Color(100, 156, 104));
        btnAceptar.setBorder(null);
        btnAceptar.setBorderPainted(false);
        btnAceptar.setFocusPainted(false);
        btnAceptar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnAceptar.setForeground(new java.awt.Color(255, 255, 255));
        btnAceptar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnAceptarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnAceptarMouseReleased(evt);
            }
        });
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        jLabel3.setText("Apellido Materno");
        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(55, 81, 55));

        btnCancelar.setText("Cancelar");
        btnCancelar.setBackground(new java.awt.Color(100, 156, 104));
        btnCancelar.setBorder(null);
        btnCancelar.setBorderPainted(false);
        btnCancelar.setFocusPainted(false);
        btnCancelar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnCancelarMousePressed(evt);
            }
        });
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jLabel5.setText("Calle");
        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(55, 81, 55));

        jLabel6.setText("Colonia");
        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(55, 81, 55));

        jLabel9.setText("Correo Electronico");
        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(55, 81, 55));

        jLabel7.setText("Numero de Casa");
        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(55, 81, 55));

        jLabel10.setText("Contraseña");
        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(55, 81, 55));

        txtNombre.setBackground(new java.awt.Color(192, 212, 193));
        txtNombre.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtNombre.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtApellidoPaterno)
                            .addComponent(txtApellidoMaterno)
                            .addComponent(txtCalle)
                            .addComponent(txtColonia)
                            .addComponent(txtNumeroCasa)
                            .addComponent(txtCorreoElectonico)
                            .addComponent(txtContraseña, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(txtNombre))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jLabel11))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clpFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtApellidoPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtApellidoMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtCalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtColonia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNumeroCasa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCorreoElectonico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtContraseña, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(clpFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAceptar, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cargar() {
        if (this.validar()) {
            this.setTitle("Actualizar");
            id = cliente.getId();
            btnAceptar.setText("Actualizar");
            this.txtNombre.setText(cliente.getNombre());
            this.txtApellidoPaterno.setText(cliente.getApellidoPaterno());
            this.txtApellidoMaterno.setText(cliente.getApellidoMaterno());
            this.txtCorreoElectonico.setText(cliente.getCorreoElectronico());
            this.txtContraseña.setText(cliente.getContrasena());
            this.cargarDireccion();
            this.clpFechaNacimiento.setSelectedDate(cliente.getFechaNacimiento().toLocalDate());
        }
    }

    private void cargarDireccion() {
        try {
            Direccion direccion = this.direccionesDAO.consultar(cliente.getIdDireccion());
            this.txtCalle.setText(direccion.getCalle());
            this.txtColonia.setText(direccion.getColonia());
            this.txtNumeroCasa.setText(direccion.getNumeroCasa());
        } catch (PersistenciaException e) {
            this.mensajeErrorDireccion();
        }
    }

    private boolean validar() {
        try {
            cliente = this.clientesDAO.consultar(correoCliente);
            return cliente != null;
        } catch (PersistenciaException e) {
            return false;
        }
    }

    private void mensajeErrorDireccion() {
        JOptionPane.showMessageDialog(this, "No se encontro la dirección");
    }

    private Direccion extraerDatosFormDireccion() {
        String calle = this.txtCalle.getText();
        String colonia = this.txtColonia.getText();
        String numeroCasa = this.txtNumeroCasa.getText();
        if (validarCalle(calle) && validarColonia(colonia) && validarNumCasa(numeroCasa)) {
            Direccion direccion = new Direccion(calle, colonia, numeroCasa);
            return direccion;
        }
        return null;
    }

    private boolean validarNombre(String nombre) {
        if (!validadores.validaNombre(nombre)) {
            JOptionPane.showMessageDialog(this, "El nombre no es válido\nSin acentos.");
        }
        return validadores.validaNombre(nombre);
    }

    private boolean validarApellidoP(String apellidoP) {
        if (!validadores.validaApellido(apellidoP)) {
            JOptionPane.showMessageDialog(this, "El apellido paterno no es válido\nSin acentos.");
        }
        return validadores.validaApellido(apellidoP);
    }

    private boolean validarApellidoM(String apellidoM) {
        if (!validadores.validaApellido(apellidoM)) {
            JOptionPane.showMessageDialog(this, "El apellido materno no es válido\nSin acentos.");
        }
        return validadores.validaApellido(apellidoM);
    }

    private boolean validarCorreo(String correo) {
        if (!validadores.validaCorreo(correo)) {
            JOptionPane.showMessageDialog(this, "El correo no es válido\nPuede usar (.'-_), use el formato Este@ejemplo");
        }
        return validadores.validaCorreo(correo);
    }

    private boolean validarContrasena(String contrasena) {
        if (!validadores.validaContrasena(contrasena)) {
            JOptionPane.showMessageDialog(this, "La contraseña no es válida\nUse una minúscula, una mayúscula, un número y un cáracter especial (8-16)");
        }
        return validadores.validaContrasena(contrasena);
    }

    private int validarEdad(Date fechaNacimiento) {
        if (validadores.validaEdad(fechaNacimiento) < 15) {
            JOptionPane.showMessageDialog(this, "La edad no es válida\nLa edad para crear una cuenta son 15 años en adelante");
        }
        return validadores.validaEdad(fechaNacimiento);
    }

    private boolean validarCalle(String calle) {
        if (!validadores.validaCalle(calle)) {
            JOptionPane.showMessageDialog(this, "La calle no es válida\nSin acentos");
        }
        return validadores.validaCalle(calle);
    }

    private boolean validarColonia(String colonia) {
        if (!validadores.validaColonia(colonia)) {
            JOptionPane.showMessageDialog(this, "La colonia no es válida\nSin acentos");
        }
        return validadores.validaColonia(colonia);
    }

    private boolean validarNumCasa(String numCasa) {
        if (!validadores.validaNumCasa(numCasa)) {
            JOptionPane.showMessageDialog(this, "El número de casa no es válido\n1-5 cáracteres");
        }
        return validadores.validaNumCasa(numCasa);
    }

    private void mensajeErrorFecha() {
        JOptionPane.showMessageDialog(this, "No seleccionaste ninguna fecha");

    }

    private Cliente extraerDatosFormCliente() {
        String nombre = this.txtNombre.getText();
        String apellidoPaterno = this.txtApellidoPaterno.getText();
        String apellidoMaterno = this.txtApellidoMaterno.getText();
        LocalDate seleccion = clpFechaNacimiento.getSelectedDate();
        Date fechaNacimiento;
        if (seleccion != null) {
            fechaNacimiento = new Date(seleccion.getYear() - 1900, seleccion.getMonthValue() - 1, seleccion.getDayOfMonth());
            Integer edad = validarEdad(fechaNacimiento);
            String correoElectronico = this.txtCorreoElectonico.getText();
            String contrasena = this.txtContraseña.getText();
            if (validarNombre(nombre) && edad >= 15 && validarApellidoP(apellidoPaterno) && validarApellidoM(apellidoMaterno) && validarCorreo(correoElectronico) && validarContrasena(contrasena)) {
                Integer idDireccion = this.guardarDireccion().getId();
                Cliente cliente = new Cliente(nombre, apellidoPaterno, apellidoMaterno,
                        fechaNacimiento, edad, correoElectronico, contrasena, idDireccion);
                return cliente;
            }
        } else {
            this.mensajeErrorFecha();
        }

        return null;
    }

    public void mostrarMensajeErrorAlGuardarDireccion() {
        JOptionPane.showMessageDialog(this, "NO fue posible agregar la dirrecion",
                "Error", JOptionPane.ERROR_MESSAGE);
    }

    public void mostrarMensajeErrorAlGuardarCliente() {
        JOptionPane.showMessageDialog(this, "NO fue posible agregar el cliente, ya que este ya existe",
                "Error", JOptionPane.ERROR_MESSAGE);
    }

    public void mostrarMensajeErrorAlActualizarCliente() {
        JOptionPane.showMessageDialog(this, "NO fue posible actualizar el cliente",
                "Error", JOptionPane.ERROR_MESSAGE);
    }

    public void mostrarMensajeClienteGuardado() {
        JOptionPane.showMessageDialog(this, "Se agrego el cliente: ",
                "Informacion",
                JOptionPane.INFORMATION_MESSAGE);
    }

    public void mostrarMensajeClienteActualizado() {
        JOptionPane.showMessageDialog(this, "Se actualizo el cliente: ",
                "Informacion",
                JOptionPane.INFORMATION_MESSAGE);
    }

    private Direccion guardarDireccion() {
        try {
            Direccion direccion = this.extraerDatosFormDireccion();
            Direccion direccionGuardada = this.direccionesDAO.insertar(direccion);
            return direccionGuardada;
        } catch (PersistenciaException ex) {
            this.mostrarMensajeErrorAlGuardarDireccion();
            return null;
        }
    }

    private void actualizarCliente() {
        try {
            Cliente cliente = this.extraerDatosFormCliente();
            if (cliente != null) {
                Cliente clienteGuardado = this.clientesDAO.actualizar(cliente, id);
                mostrarMensajeClienteActualizado();
                dispose();
            }

        } catch (PersistenciaException ex) {
            this.mostrarMensajeErrorAlActualizarCliente();
        }
    }

    private void guardarCliente() {
        try {
            Cliente cliente = this.extraerDatosFormCliente();
            if (cliente != null) {
                Cliente clienteGuardado = this.clientesDAO.insertar(cliente);
                mostrarMensajeClienteGuardado();
                new InicioForm(clientesDAO, direccionesDAO, cuentasDAO, retirosDAO, depositosDAO, movimientosDAO).setVisible(true);
                this.dispose();
            }

        } catch (PersistenciaException ex) {
            this.mostrarMensajeErrorAlGuardarCliente();
        }
    }

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        if (!this.validar()) {
            this.guardarCliente();
        } else {
            this.actualizarCliente();
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        if (!this.validar()) {
            new InicioForm(clientesDAO, direccionesDAO, cuentasDAO, retirosDAO, depositosDAO, movimientosDAO).setVisible(true);
        }
        dispose();

    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnAceptarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAceptarMousePressed
        this.btnAceptar.setContentAreaFilled(false);
        this.btnAceptar.setOpaque(true);
        this.btnAceptar.setBackground(new Color(148, 116, 69));
    }//GEN-LAST:event_btnAceptarMousePressed

    private void btnCancelarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMousePressed
        this.btnCancelar.setContentAreaFilled(false);
        this.btnCancelar.setOpaque(true);
        this.btnCancelar.setBackground(new Color(148, 116, 69));
    }//GEN-LAST:event_btnCancelarMousePressed

    private void btnAceptarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAceptarMouseReleased
        this.btnAceptar.setBackground(new Color(100, 156, 104));
    }//GEN-LAST:event_btnAceptarMouseReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnCancelar;
    private com.github.lgooddatepicker.components.CalendarPanel clpFechaNacimiento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtApellidoMaterno;
    private javax.swing.JTextField txtApellidoPaterno;
    private javax.swing.JTextField txtCalle;
    private javax.swing.JTextField txtColonia;
    private javax.swing.JPasswordField txtContraseña;
    private javax.swing.JTextField txtCorreoElectonico;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNumeroCasa;
    // End of variables declaration//GEN-END:variables
}
